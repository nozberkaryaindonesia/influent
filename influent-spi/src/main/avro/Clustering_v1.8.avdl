/**
 * Copyright (c) 2013 Oculus Info Inc. 
 * http://www.oculusinfo.com/
 * 
 * Released under the MIT License.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
@namespace("influent.idl")

/**
 Services for clustering
*/
protocol FL_Clustering {
	import idl "DataTypes_v1.8.avdl";
	
	/**
	 Clusters the specified entities and returns the resulting set of clusters (if entities are hierarchically 
	 clustered returns the root clusters) 
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	   - entityIds can contain uid's to entity clusters
	   - Added source and target context
	   
	 Service URL: /cluster
	 HTTP Method: POST and GET
	 
	 @param entityIds 	uids of entities or entity clusters to cluster in target cluster context
	 @param sourceContextId	the source context the entityIds are being inserted from (entity clusters must have a source context)
	 @param targetContextId	the context to store the resulting clusters
	 @return 			uids of clusters
	 */
	array<string> clusterEntitiesById(array<string> entityIds, string sourceContextId, string targetContextId);
	
	/**
	 Clusters the specified entities and returns the resulting set of clusters (if entities are hierarchically 
	 clustered returns the root clusters) 
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	   - Added clusters to allow for clustering of entity clusters
	   - Added source and target context
	   
	 Service URL: /cluster
	 HTTP Method: POST and GET
	 
	 @param entities 	entities to cluster in target cluster context
	 @param clusters	entity clusters to cluster in target cluster context
	 @param sourceContextId	the source context the entityIds are being inserted from (entity clusters must have a source context)
	 @param targetContextId	the context to store the resulting clusters
	 @return 			uids of clusters	
	 */
	array<string> clusterEntities(array<FL_Entity> entities, array<FL_Cluster> clusters, string sourceContextId, string targetContextId);
	
}
