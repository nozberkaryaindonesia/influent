/**
 * Copyright (c) 2013 Oculus Info Inc. 
 * http://www.oculusinfo.com/
 * 
 * Released under the MIT License.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
@namespace("influent.idl")

/**
 Data Access for clusters
*/
protocol FL_ClusteringDataAccess {
	import idl "DataTypes_v1.8.avdl";

	/**
	 Sort type for transactions
	 */
	enum FL_SortBy {
		DATE, // date, in ascending order
		AMOUNT // amount, in descending order
	}

	/**
	 Direction of desired links
	 */
	enum FL_DirectionFilter {
		SOURCE,
		DESTINATION,
		BOTH
	}

	/**
	 Returns a set of clusters by uid.
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	 
	 Service URL: /cluster/list
	 HTTP Method: POST and GET
	 
	 @param entities 	uids of clusters to retrieve
	 @param contextId	the context to retrieve the clusters from
	 @return 			cluster entities	
	 */
	array<FL_Cluster> getClusters(array<string> entities, string contextId);
	
	/**
	 Returns a set of cluster summaries by uid.
	 
	 Service URL: /clustersummary/list
	 HTTP Method: POST and GET
	 
	 @param entities 	uids of clusters to retrieve
	 @return 			cluster entities
	 */
	array<FL_Cluster> getClusterSummary(array<string> entities);
	
	
	/**
	 Returns a set of account owners by uid.
	 
	 ADDED in 1.7
	 
	 Service URL: /accountowners/list
	 HTTP Method: POST and GET
	 
	 @param owners 	uids of account owners to retrieve
	 @return 		entity clusters representing account owners
	 */
	array<FL_Cluster> getAccountOwners(array<string> owners);
	
	/**
	 Removes entities from a cluster
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	   
	 Service URL: /cluster/remove
	 HTTP Method: POST and GET
	 
	 @param entities 	uids of entities to remove
	 @param contextId	the context of the cluster to remove entities from
	 @return 			number of entities removed
	 */
	long removeMembers(array<string> entities, string contextId);
	
	
	/**
	 Returns all clusters in a context.
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	   - Removed unused computeSummaries
	   
	 Service URL: /cluster/context
	 HTTP Method: POST and GET
	 
	 @param contextId			the context to retrieve the clusters fr	om
	 @return 					cluster entities	
	 */
	array<FL_Cluster> getContext(string contextId);
	
	/**
	 Deletes all clusters in a context.
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	   
	 Service URL: /cluster/context/remove
	 HTTP Method: POST or GET
	 
	 @param contextId	the context to retrieve the clusters from
	 @return 			boolean indicating if any clusters were deleted	
	 */
	boolean clearContext(string contextId);
		
	/**
	 Returns links to other entities related to specify entities. Each Link returned should
	 represent multiple records, used for displaying flow.
	 
	 See the specification for the Flow Data View.
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	 
	 @param entities 			uids of entities to retrieve links for
	 @param focusEntities 		uids of focus entities (may be null)
	 @param direction 			one of: SOURCE, DESTINATION, BOTH
	 @param tag 				one of: FINANCIAL, SOCIAL, COMMUNICATION
	 @param date 				in the given date range
	 @param entitiesContextId	the context to compute flow from entities
	 @param focusContextId		the context to compute flow from focus entities (if null a new context is created for dst)
	 @return 					map of input entity IDs to an array of the links for that cluster entity	
	 */
	map<array<FL_Link>> getFlowAggregation(
		array<string> entities,
		union {array<string>, null} focusEntities,
		FL_DirectionFilter direction,
		union {FL_LinkTag, null} tag,
		union {FL_DateRange, null} date,
		string entitiesContextId,
		union {null, string} focusContextId);		// CHANGED IN 1.8
	
	/**
	 Returns links to other entities related to specify entities.  Each Link returned should
	 represent multiple records, used for displaying time series.
	 
	 See the specification for the Time Series Data View.
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	 
	 Service URL: /cluster/link/series
	 HTTP Method: POST and GET
	 
	 @param entities 			uids of entities to retrieve links for
	 @param focusEntities 		uids of focus entities (may be null)
	 @param tag 				one of: FINANCIAL, SOCIAL, COMMUNICATION
	 @param date 				in the given date range
	 @param entitiesContextId	the context to compute flow between clusters from
	 @param focusContextId		the context to compute flow between clusters from (if null a new context is created for dst)
	 @return 					map of input entity IDs to an array of the links for that cluster entity	
	 */
	map<array<FL_Link>> getTimeSeriesAggregation(
		array<string> entities,
		union {array<string>, null} focusEntities,
		union {FL_LinkTag, null} tag,
		FL_DateRange date,
		string entitiesContextId,
		union {null, string} focusContextId);		// CHANGED IN 1.8
	
	/**
	 Returns links to other entities related to specify entities. Each link returned should
	 represent one raw transaction.  For financial data, these transactions will form a ledger.
	 For communications or social data, these are un-aggregated links for drill down by the user.
	 
	 CHANGED IN 1.7
	   - Removed unused sessionId
	 
	 Service URL: /link/transactions
	 HTTP Method: POST and GET
	 
	 @param entities 		uids of entities to retrieve links for
	 @param direction 		one of: SOURCE, DESTINATION, BOTH
	 @param tag 			one of: FINANCIAL, SOCIAL, COMMUNICATION
	 @param date 			in the given date range
	 @param order			Sort order for transactions
	 @param max				Trim the number of results this this value.
	 @param contextId		the context to retrieve the clusters from
	 @return 				map of input entity IDs to an array of the transactions for that cluster entity	
	 */
	map<array<FL_Link>> getAllTransactions(
			array<string> entities,
			union {FL_LinkTag, null} tag,
			union {FL_DateRange, null} date,
			union {FL_SortBy, null} sort,
			union {array<string>, null} linkFilter, // ADDED IN 1.4
			long max = -1,
			string contextId,
			string sessionId
	);
}
