/**
 * Copyright (c) 2013 Oculus Info Inc. 
 * http://www.oculusinfo.com/
 * 
 * Released under the MIT License.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is furnished to do
 * so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
@namespace("influent.idl")

/**
 Services for geocoding.
*/
protocol FL_Geocoding {
	import idl "DataTypes_v1.8.avdl";
	
	
	/**
	 Geocodes the specified locations, populating missing properties in place. 
	 
	 @param locations	the locations to geocode.
	 */
	boolean geocode(array<FL_GeoData> locations);
	
	/**
	 Returns a list of country objects for the previously geolocated locations specified, based
	 on country code.
	 
	 @param locations	the locations to lookup, which must contain a country code.
	 @return 			a list of geocoded countries, in the same order as requested.
	 */
	array<FL_Country> getCountries(array<FL_GeoData> locations);
	
}
